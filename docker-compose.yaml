version: "3.0"
services:
  elasticsearch:
    container_name: es-container
    image: "docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}"
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    depends_on:
      - db
    ports:
      - "${ES_PORT}:${ES_PORT}"
  kibana:
    container_name: kibana-container
    image: "docker.elastic.co/kibana/kibana:${KB_VERSION}"
    environment:
      - "ELASTICSEARCH_HOSTS=http://es-container:${ES_PORT}"
    depends_on:
      - elasticsearch
    ports:
      - "${PORT_KB}:${PORT_KB}"
  db:
    container_name: postgres-container
    image: "postgres:${POSTGRES_VERSION}"
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    ports:
      - "${PORT_PSQL}:${PORT_PSQL}"

  service:
    container_name: django-container
    build: app
    command: uwsgi --strict --ini uwsgi.ini
    restart: always
    volumes:
      - static_value:/opt/app/static/
      - media_value:/opt/app/media/
    env_file:
      - ./.env
    depends_on:
      - db
  nginx:
    container_name: nginx-container
    image: "nginx:${NGINX_VERSION}"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - service
    ports:
      - "${PORT_NGINX}:${PORT_NGINX}"
  etl:
    build: etl
    env_file:
      - ./.env
    depends_on:
      - nginx
      - service
      - elasticsearch

  swagger:
    container_name: swagger-container
    image: swaggerapi/swagger-ui
    volumes:
      - ./swagger/openapi.yaml:/swagger.yaml
    env_file:
      - ./.env
    depends_on:
      - nginx
    ports:
      - "${PORT_SWAGGER}:${PORT_SWAGGER}"
volumes:
  static_value:
  media_value:
  postgres_data: